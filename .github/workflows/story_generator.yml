name: Story Generator Workflow 1 (12AM-3AM UTC)

on:
  # Run daily at midnight UTC (can be adjusted to your preferred time)
  schedule:
    - cron: '0 0 * * *'  # Format: minute hour day month day-of-week
  
  # Keep manual trigger option
  workflow_dispatch:
    inputs:
      duration:
        description: 'Duration to run in hours (0 for unlimited)'
        required: true
        default: '3.0'  # Set to run for 3 hours
      stories_count:
        description: 'Number of stories to generate (0 for unlimited)'
        required: true
        default: '0'  # Set to unlimited by default to focus on time

jobs:
  generate-stories:
    runs-on: ubuntu-latest
    timeout-minutes: 180  # 3 hours runtime
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install FFmpeg
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # Install google-genai to match the import statements in the code
          pip install google-genai==0.1.0
      
      - name: Set up environment secrets
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          # Check if GEMINI_API_KEY is set from secrets
          if [ -z "$GEMINI_API_KEY" ]; then
            echo "⚠️ Warning: GEMINI_API_KEY is not set from secrets."
            echo "Using hardcoded API key from config/settings.py"
          else
            echo "✅ GEMINI_API_KEY is set from secrets."
            echo "GEMINI_API_KEY=$GEMINI_API_KEY" >> $GITHUB_ENV
          fi
          
      - name: Run continuous story generator
        env:
          # If triggered manually, use the input values; otherwise use scheduled values
          DURATION_HOURS: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.duration || '3.0' }}
          STORIES_COUNT: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.stories_count || '0' }}
          # Force GITHUB_EVENT_NAME for the continuous_runner.py script
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          # GEMINI_API_KEY is already set in the environment or hardcoded in settings.py
        run: |
          echo "Running for ${DURATION_HOURS} hours or until ${STORIES_COUNT} stories are generated (0 = unlimited)"
          echo "Event type: ${GITHUB_EVENT_NAME}"
          # Check Python and package versions
          python -c "import sys; print('Python version:', sys.version)"
          python -c "import google.genai as genai; print('Google Genai version:', genai.__version__)"
          # Run the continuous generator - for scheduled runs, always use 3 hours and unlimited stories
          if [ "$GITHUB_EVENT_NAME" = "schedule" ]; then
            echo "This is a scheduled run. Enforcing 3-hour runtime and unlimited stories."
            python continuous_runner.py --duration 3.0 --count 0
          else
            echo "This is a manual run. Using provided parameters."
            python continuous_runner.py --duration $DURATION_HOURS --count $STORIES_COUNT
          fi
          
      - name: Upload generated content
        uses: actions/upload-artifact@v4
        with:
          name: generated-stories
          path: |
            output/
            *.log
          retention-days: 2
